<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>欢迎加入 Hugo NexT 组织！</title><url>/post/02-external-link/</url><categories><category>示例文章</category></categories><tags><tag>Hugo</tag><tag>NexT</tag></tags><content type="html">  欢迎来到 Hugo NexT 文档站点！ 它是从 Theme NexT 移植过来的为 Hugo 打造的高品质优雅主题，保持简单易用的特性和强大的功能。
用户指南 设置 NexT 主题很容易。只需遵循文档，就可快速创建您的个人网站！
反馈 访问 Awesome NexT 列表，与其他用户分享插件和教程。 加入我们的 Gitter 聊天。 在几秒钟内添加或改进翻译。 在 GitHub Issues 中报告一个 &amp;#x1f41b;。 在 GitHub 上申请一个新特性。 为最受欢迎的功能请求投票。   </content></entry><entry><title>世界，你好！</title><url>/demo/hello-world.html</url><categories><category>开始建站</category></categories><tags><tag>Hugo</tag><tag>开始</tag></tags><content type="html">   “使用 weight 关键字置顶文章。”
Hugo 是现今世界上最快的网站建设框架，也是最流行的开源静态站点生成器之一。 凭借其惊人的速度和灵活性，Hugo 让建设网站再次变得有趣起来。
快速开始 发表新文章 1 $ hugo new hello-world.md 更多信息： 内容格式 启动服务 1 $ hugo server 更多信息： Hugo 服务命令行 生成静态文件 1 $ hugo 更多信息： Hugo 建站 部署到服务器 1 $ hugo deploy 更多信息： Hugo 发布 祝你好运，相信你会喜欢上 Hugo 建站的旅程！
  </content></entry><entry><title>Test</title><url>/study/test/</url><categories><category>测试</category></categories><tags><tag><no value=/><tag><no value=/></tags><content type="html">  this is a test for a new file
  </content></entry><entry><title>思科第四章小测 IP寻址</title><url>/study/13-%E6%80%9D%E7%A7%91%E7%AC%AC%E5%9B%9B%E7%AB%A0%E5%B0%8F%E6%B5%8B-ip%E5%AF%BB%E5%9D%80/</url><categories><category>大二</category><category>计网</category></categories><tags><tag><no value=/></tags><content type="html">  在跟踪从 PC1 到 PC2 的路由时，显示的三个 IPv6 地址是什么? （选择三项。） 请将每个描述与相应的 IP 地址进行配对。（并非全部选项都要用到）。 子网掩码 255.255.255.224 的前缀长度记法如何表示？ 下列哪个地址是 IP 地址3FFE:1044:0000:0000:00AB:0000:0000:0057 最短的缩写？ 哪一项是 IPv6 地址 fe80:0000:0000:0000:0220:0b3f:f0e0:0029 的简写格式？ 被坑啦！
  </content></entry><entry><title>软件工程5.21</title><url>/study/12-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B5.21/</url><categories><category>大二</category></categories><tags><tag><no value=/></tags><content type="html">  进程视图 面向系统架构师和开发人员
适用于多进程多视图，关注系统的并发性、分布性、性能和资源分配
形式
UML类图 进程间的交互
进程间的交互可以用时序图表示 单线程的Web服务器
多线程的Web服务器
每来一个连接，创建一个线程。从线程池中分配空余的线程 多线程协作 线程同步 进程通信 死锁的预防、检测和解除 AWS ELB（弹性负载均衡器）Amazon Web Services提供的负载均衡服务
活动图
哪些进程 中间件 进程间信息的交互 部署图
开发视图 关注
模块划分 文件组织 依赖关系 构建过程 分层架构描述
UML——包图 源代码目录结构
包图
按业务逻辑分 适合综合性强的团队 按功能性需求分 依赖其他模块，调试困难 构件图
关注系统的逻辑结构（物理部署由部署图描述） 构件和类 相似： 不同：类（逻辑），构件（物理） UML package::component ○供给接口 半圆是需求接口 装配：$&amp;amp;ndash;(○$ 要素 构件 接口库 接口 端口 关系 图标形式、或interface形式
连接件
直连 代理连接 依赖和实现关系 虚线箭头、实现镜头 部署视图 非功能性需求
关注
软件节点 硬件 逼数 运行 寻访环境 部署时，尽量不要动源代
开发和测试、生产的环境是有不同的
向外开放，浏览请求增多时，并发性差
部署图
元素 节点 工件 通信路径 场景视图 “4+1”的“+1”部分 用例图、序列图 作用 验证其他4个视图 逻辑视图 开发视图 进程视图 部署视图 将其他四个视图整合到一起，展示他们是如何协同工作的 和甲方沟通 使用 优先关键场景 高频使用场景 绘制其交互图 检查其他四个视图是否一致，是否满足场景需求 调整其他四个视图，保持一致性 沟通 视图的选择 有所侧重 Web：逻辑视图、开发视图 并发：进程视图、物理视图 单击：部署视图（多余） 单进程视图：进程视图（多余） 额外新添视图 技术视图（可以画） 技术选型：编程语言、操作系统、数据库、框架、中间件、库 数据视图 ER O-R Mapping技术 解决对象与数据库模型不匹配问题，实现对象和记录之间的转换 核心功能 持久化 查询 关系管理 上下文视图 顶层的数据流程图 行为视图 安全视图 性能视图 运营视图 业务视图 非功能性 可用性的策略 错误检测 方法 被动式查错。设置检查点 主动式查错。规定 …  </content></entry><entry><title>报错小仓库（持续更新）</title><url>/study/11-%E6%8A%A5%E9%94%99%E5%B0%8F%E4%BB%93%E5%BA%93/</url><categories><category>大二</category></categories><tags><tag><no value=/></tags><content type="html"><![CDATA[  (venv) D:\administrator\College\课后笔记\SE-软工\newsAPI_project&gt;vue ui (node:23504) [DEP0040] DeprecationWarning: The punycode module is deprecated. Please use a userland alternative instead. (Use node --trace-deprecation ... to show where the warning was created)
1 2 3 4 5 6 在 nodejs v21.0.0 以上会出现该提示 识别哪些依赖项要使用punycode npm ls punycode 发现`-- (empty)，可能意味着没有吧，先不管了 vue ui创建项目报错Cannot read properties of undefined (reading &lsquo;indexOf&rsquo;)
1 2 缺少了yarn管理器，在cmd窗口安装一个yarn管理器即可 npm install -g yarn 使用SMTP服务时，出现SMTPAuthenticationError
1 原因是身份验证错误，检查一下项目中的邮箱配置是否正确，尤其注意EMAIL_HOST_PASSWORD，是开启服务时给你的授权码，不是平时的登录密码！！！不是平时的登录密码！！！不是平时的登录密码！！！ (venv) D:\administrator\College\课后笔记\News-recommendation-system\e2\newsAPI_project&gt;redis-cli ping
(error) NOAUTH Authentication required.
1 在 redis.windows.conf 文件中配置了密码，但是在终端执行命令时未提供。加上 -a your_passoword 即可。   ]]></content></entry><entry><title>新闻推荐系统后端</title><url>/study/10-%E6%96%B0%E9%97%BB%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E5%90%8E%E7%AB%AF/</url><categories><category>大二</category><category>大作业</category></categories><tags><tag>软件工程</tag><tag>Django</tag></tags><content type="html">   后端：Django
参考： https://www.bilibili.com/video/BV19spseGE9Y?spm_id_from=333.788.videopod.episodes&amp;amp;vd_source=ae5b8f4c462b3f90ff8881691bdf718b&amp;amp;p=2 常用命令汇总 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 ## 创建Django项目 django-admin startproject project_name ## 创建Django应用 python manage.py startapp app_name ## 生成数据库迁移文件 python manage.py makemigrations [app_name] ## 执行迁移文件 python manage.py migrate [app_name] ## 查看迁移状态（[ ] 表示未应用 [X] 表示已应用） python manage.py showmigrations [app_name] ## 清除缓存 python manage.py clearcache ## 测试用开发服务器 python manage.py runserver ## 查看已注册路由 python manage.py show_urls # 启动 Redis redis-server.exe redis.windows.conf # 在项目终端进行 Redis 连接测试 redis-cli ping # 如有跟着博客配置密码 redis-cli -a your_password ping # 返回 PONG 即说明Redis成功运行 # 启动 Celery Worker（添加参数 -P） celery -A nrsmAPI_project worker -l info -P eventlet # 再启动 Celery Beat celery -A nrsmAPI_project beat --loglevel=info 开发接口尽可能遵循Restful规范： 前端架构搭建 node 和 npm 和 vue 版本 (venv) …  </content></entry><entry><title>概率论-第三章笔记</title><url>/study/9-%E6%A6%82%E7%8E%87%E8%AE%BA-%E7%AC%AC%E4%B8%89%E7%AB%A0%E7%AC%94%E8%AE%B0/</url><categories><category>概率论</category></categories><tags><tag>概率论</tag><tag>课后笔记</tag></tags><content type="html"><![CDATA[  第3章 随机向量 3.1 随机向量的分布 一、随机向量分布及其分布函数 出发点：一个事件的发生的概率受多种因素的共同作用。
【定义3.1】 n维随机向量$$(X_1, X_2, X_3, &amp;hellip;)∈(\Omega, P)$$，则称$(X_1, X_2, X_3, &amp;hellip;)$是在$(\Omega, P)$上的一个随机向量。
【定义3.2】 n维随机向量的分布函数$$F(x_1, x_2, &amp;hellip;, x_n)=P(X_1\leq x_1, X_2 \leq x_2, &amp;hellip;, X_n \leq x_n)$$，又称为n个随机变量的联合分布函数，它表示的是${X_1\leq x_1}, {X_2\leq x_2},&amp;hellip;, {X_n\leq x_n}$的交事件
对于二维向量，其几何意义是：在平面上围成的面积 随机向量分布函数的性质 以下仅对二维向量作讨论
$$P{x_1 \leq X \le x_2, y_1 \le Y \le y_2} \ = F(x_2, y_2) - F(x_1, y_2) - F(x_2, y_1) + F(x_1, y_1)$$ 非负性 单调非降，右连续 $$F(x, -\infty) = 0 \ F(-\infty, y) = 0 \ F(-\infty, -\infty) = 0 \ F(+\infty, +\infty) = 1$$ 边缘分布函数 $$F(x, +\infty) = F_X(x) \ F(+\infty, y) = F_Y(y)$$ 二、离散型随机向量的概率分布 【定义3.4】 离散型随机向量$(X, Y)$的概率分布，或$X$和$Y$的联合分布，写作 $$P{X = x_i, Y = y_i} = p_{ij}, i, j = 1, 2, &amp;hellip;,$$ 性质 非负性 归一性 边缘分布 $$p_{i}^X(i = 1, 2, &amp;hellip;) = \sum_j P{X = x_i, Y = y_j} = \sum_j p_{ij}\p_{j}^Y(j = 1, 2, &amp;hellip;)同理$$ 求$X = x_1$的边缘密度函数，就把所有$y$的取值加起来（用$·$表示all） $X$ 三、连续型随机向量的概率密度函数 四、二元正态分布 3.2 条件分布与随机变量 …  ]]></content></entry><entry><title>Django后端项目模仿</title><url>/study/7-django%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%A8%A1%E4%BB%BF/</url><categories/><tags/><content type="html"><![CDATA[   在前面已经跑通book_project的基础上，针对本项目的服务需求进行修改和完善。
一、Django结构 1.1 创建新Django项目 1 2 3 4 5 django-admin startproject nrsm_project cd nrsm_project python manage.py startapp news python manage.py startapp user python manage.py startapp admin_panel 再将之前book_project的虚拟环境venv和.idea文件复制过来，就不用重新配置虚拟环境了。——这样会出现路径仍然指向book_project，因此后面直接在把代码搬到book_project中了（搬人不搬屋）
项目结构如下
1.2 更改setting配置 1.2.1 配置数据库 使用MYSQL
下面和参考教程不一样，在之前的项目测试中，改为1,4,13才能运行，具体原因暂按下不管。
1.2.2 添加应用 将创建的app加入到installed_apps里面
1.2.3 创建model 先到这一步吧，接下来是接口相关
1.2.4 接口 先下载
1 2 3 pip install djangorestframework pip install djangorestframework-simplejwt 在 settings.py 中添加
1 2 3 4 INSTALLED_APPS += [ &#39;rest_framework&#39;, &#39;rest_framework_simplejwt&#39;, ]   ]]></content></entry><entry><title>在指定目录方便用管理员权限打开命令黑窗</title><url>/study/8-%E5%9C%A8%E6%8C%87%E5%AE%9A%E7%9B%AE%E5%BD%95%E6%96%B9%E4%BE%BF%E7%94%A8%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E6%89%93%E5%BC%80%E5%91%BD%E4%BB%A4%E9%BB%91%E7%AA%97/</url><categories/><tags/><content type="html"><![CDATA[  我是参考博客 将以下代码复制到一个文本文件，然后保存成 cmd.reg，注意文件后缀是reg，注册表文件。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 Windows Registry Editor Version 5.00 ; Created by: Shawn Brink ; http://www.sevenforums.com ; Tutorial: http://www.sevenforums.com/tutorials/47415-open-command-window-here-administrator.html [-HKEY_CLASSES_ROOT\Directory\shell\runas] [HKEY_CLASSES_ROOT\Directory\shell\runas] @=&#34;Open cmd here as Admin&#34; &#34;HasLUAShield&#34;=&#34;&#34; [HKEY_CLASSES_ROOT\Directory\shell\runas\command] @=&#34;cmd.exe /s /k pushd \&#34;%V\&#34;&#34; [-HKEY_CLASSES_ROOT\Directory\Background\shell\runas] [HKEY_CLASSES_ROOT\Directory\Background\shell\runas] @=&#34;Open cmd here as Admin&#34; &#34;HasLUAShield&#34;=&#34;&#34; [HKEY_CLASSES_ROOT\Directory\Background\shell\runas\command] @=&#34;cmd.exe /s /k pushd \&#34;%V\&#34;&#34; [-HKEY_CLASSES_ROOT\Drive\shell\runas] [HKEY_CLASSES_ROOT\Drive\shell\runas] @=&#34;Open cmd here as Admin&#34; &#34;HasLUAShield&#34;=&#34;&#34; [HKEY_CLASSES_ROOT\Drive\shell\runas\command] @=&#34;cmd.exe /s /k pushd \&#34;%V\&#34;&#34; 哪天你不想要这个新加的选项了，请把下面的代码复制，同样保存到一个文本文件然后存为remove.reg，双击运行之。选项就会消失，菜单恢复正常。 1 2 3 4 5 6 7 8 9 10 11 12 13 Windows Registry Editor Version 5.00 ; Created by: Shawn Brink ; http://www.sevenforums.com ; Tutorial: http://www.sevenforums.com/tutorials/47415-open-command-window-here-administrator.html [-HKEY_CLASSES_ROOT\Directory\shell\runas] [-HKEY_CLASSES_ROOT\Directory\Background\shell\runas] [-HKEY_CLASSES_ROOT\Drive\shell\runas]   ]]></content></entry><entry><title>概率论-第二章复习</title><url>/study/3-%E6%A6%82%E7%8E%87%E8%AE%BA-%E7%AC%AC%E4%BA%8C%E7%AB%A0%E5%A4%8D%E4%B9%A0/</url><categories><category>概率论</category><category>复习</category></categories><tags><tag><no value=/></tags><content type="html">   第二章复习 2.3 常用的离散型分布 一、退化分布 定义： $$P{X=a} = 1$$ X 服从 a 处的退化分布。也就是永远取一个确定的常数 a 期望： $$E(X) = 0$$ 方差： $$D(X) = 0$$ 二、两点分布 定义： 只有两个可能的取值 $$P{X=x_1}=p,\quad P{X=x_2}=1-p,\quad 0&amp;lt;p&amp;lt;1,$$ X 服从 a 处参数为 $x_1$, $x_2$ 的两点分布 三、均匀分布 四、二项分布 五、几何分布 六、超几何分布 七、泊松分布 2.4 常用的连续性分布 一、均匀分布 二、指数分布 三、正态分布 2.5 随机变量函数的分布 一、随机变量的函数 二、离散型随机变量函数的分布 三、连续性随机变量函数的分布   </content></entry><entry><title>Hugo常用命令</title><url>/study/2-hugo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url><categories><category>技能</category></categories><tags><tag><no value=/></tags><content type="html">   当前欠缺：
无法渲染数学公式如 $a$, $x^2$ 代码没有显示所用语言 基础命令 修改设置后重新构建网站： 1 hugo server --cleanDestinationDir 创建新内容 1 hugo new posts/new_posts/index.md   </content></entry><entry><title>软件工程思路笔记</title><url>/study/4-%E8%BD%AF%E5%B7%A5%E8%AF%BE%E5%A0%82%E6%80%9D%E8%B7%AF%E7%AC%94%E8%AE%B0/</url><categories><category>软件工程</category></categories><tags/><content type="html">  tags: [TOC]
需求工程 用例规约 1. 画出Use Case 2. 编写用例规约 1. 可选需求 2. 非功能需求 3. 黑盒用例规约 和 白盒用例规约 随着开发的过程要不断添加细节 1.识别用例：有哪些时间、actor 2.用例分布提纲：+前置条件 +后置条件 3.（非技术甲方）黑盒规约：+完整的事件流 4.（技术人员）白盒规约：+系统内部行为的细节描述 可以采用双列（用户视图 | 系统视图） 3. 用例图优化 符号： Include包含 从基本用例→包含用例，包含用例为基本用例提供功能 &amp;amp;lt;&amp;amp;gt;衍型 Extend扩展 Generalization泛化（类似类中的继承关系） Include关系 基数 Include中，不需要处理条件， 分离非主要行为，突出用例的核心价值 提出多个用例存在一段共有的行为，可以提取出来反复使用 Extend关系（见图） Extension扩展用例——Base基本用例 基数 扩展关系符号是 Generalization泛化， 建立概念模型Conceptual Class 识别Conceptual Class 分类法 物理实体 逻辑实体 组织实体 名词提取法 1.从规约中提取所有名词，可重复 2.去掉：冗余、执行者和系统本身、边界类（菜单、链接）、类的属性 3.得到基本概念类 易错：类的实体当做属性被删掉（e.g.型号） 属性特征：数字，文本 因此如果一个东西不能简单用数字或文本描述，应该为类而非属性 建立Conceptual Class之间的关系 类图：类 + 类之间的关系 类是结构，结构是静态的 UML 类名 | 属性 | 操作 可见性Visibility +公共可见性 #受保护 -私有 ~包可见 多重性Multiplicity 描述关联 *无限多个 1， 2， 0， 正好1，2，0个 {1 or 2&amp;amp;hellip;4}离散值 vs 基数：整个关系 多重性：某一端，“从这边看过去，能连几个那边” 关联关系Relationship：Association “一个类知道另一个类” 无箭头实线：彼此都知道 ↑耦合性 但更灵活 单向实线：A知道B，A→B，订单→支付方式 符合封装原则，↓耦合 但导航性可能会比较麻烦，比如反向查询不方便 导航性：一个类能否通过关联访问另一个类 决定哪个类负责持有或访问数据 需求分析阶段 设计阶 …  </content></entry><entry><title>Django的初使用</title><url>/study/1-django%E7%9A%84%E5%88%9D%E4%BD%BF%E7%94%A8/</url><categories><category>Django</category></categories><tags><tag><no value=/></tags><content type="html"><![CDATA[   参考博客： https://www.cnblogs.com/zhangxue521/p/12957816.html Django的安装 前提 pycharm Python 3.9.6 cmd命令 1 pip install Django==3.2 -i https://pypi.tuna.tsinghua.edu.cn/simple 版本兼容参考： https://blog.csdn.net/qq_28770757/article/details/123415364 检查是否安装成功:
1 python -m django --version 新建Django项目 1 2 3 4 5 django-admin startproject book_project # 新建项目 cd book_project # 进入项目根目录 python manage.py startapp book # 新建app 后端准备 更改settings配置 更改数据库配置 导入pymysql包 更改installed_apps 创建model 新增接口 添加图书 显示图书列表 创建app路由 初始化数据库 1 2 3 python manage.py makemigrations python manage.py migrate 启动服务 1 python manage.py runserver You’re seeing this error because you have DEBUG = True in your Django settings file. Change that to False, and Django will display a standard 404 page. https://www.w3schools.com/django/django_404.php 测试接口 使用postman测试接口 https://www.postman.com/downloads/ 1 2 3 4 5 # 添加书籍test1 http://127.0.0.1:8000/api/add_book?book_name=test1 # 返回书籍列表 http://127.0.0.1:8000/api/show_book 前端 安装vue 1 npm install -g @vue/cli 在安装 @vue/cli 时遇到了多个 npm warn deprecated 警告，表明某些依赖表已被废弃（deprecated） 然而还是无法执行。 $ npm run dev vue-admin-template@4.4.0 dev vue-cli-service serve &lsquo;vue-cli-service&rsquo; 不是内部或外部命令，也不是可运行的程序或批处理文件。 因此需要重头装Vue，在已经提前装好
node -v v22.11.0 npm -v 10.9.0 的前提下，步骤如下： https://blog.csdn.net/Javachichi/article/details/132868889 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 # 配置npm的全局模块目录和缓存目录配置到自己创建的那两个目录 npm config set prefix &#34;D:\nodejs\node_global&#34; npm config set cache &#34;D:\nodejs\node_cache&#34; # 下载源换为华为源 # 注：淘宝源不行npm config set registry https://registry.npm.taobao.org npm config set registry https://mirrors.huaweicloud.com/repository/npm/ # 查看是否修改成功 npm config list # 配置环境变量 # 用户变量 - Path - D:\nodejs\node_global # 系统变量 - 新建 - 变量名：NODE_PATH - 变量值：D:\nodejs\node_global\node_modules # 系统变量 - Path - %NODE_PATH% # 安装vue npm install vue -g # 安装vue/cli npm install -g @vue/cli # 测试vue是否配置成功 vue --version 安装模版 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 克隆项目 git clone https://github.com/PanJiaChen/vue-admin-template.git # 进入项目根目录 cd vue-admin-template # 项目安装所需依赖， 建议不要用 cnpm 安装 会有各种诡异的bug 可以通过如下操作解决 npm 下载速度慢的问题 npm install --registry=https://registry.npm.taobao.org # 本地开发 启动项目 npm run dev 遇到此类报错可能是因为没有用管理员权限，需要用管理员权限打开cmd，cd到vue模板项目根目录，再执行命令行
执行npm run dev成功后，可看到web界面 登录后可看到 与服务端交互 在src-&gt;api-&gt;创建book.js文件
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import request from &#39;@/utils/request&#39; export function getList(){ return request({ url: &#39;/api/show_books&#39;, method: &#39;get&#39;, }) } export function addbook(book_name) { return request({ url: &#39;/api/add_book&#39;, method: &#39;get&#39;, params: { book_name } }) } 改Bug 前端修改 后端修改 pip install django-cors-headers
  ]]></content></entry><entry><title>我的第一篇博客</title><url>/study/6-%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url><categories/><tags/><content type="html"><![CDATA[  标题一（两个##） 标题二 标题三 标题四 ==我是高亮==
红色
上引号
删除
应用 应用
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import java.util.Scanner; public class HelloWorld { public static void main(String[] args) { // 创建一个 Scanner 对象，用于获取用户输入 Scanner scanner = new Scanner(System.in); // 提示用户输入名字 System.out.print(&#34;请输入你的名字：&#34;); String name = scanner.nextLine(); // 输出欢迎消息 System.out.println(&#34;你好，&#34; + name + &#34;！欢迎使用 Java！&#34;); } } 序号o 辅导费   ]]></content></entry><entry><title>支持在Markdown文档中实现块信息强调标注</title><url>/demo/hugo-blockquote.html</url><categories><category>示例文章</category><category>语法</category></categories><tags><tag>blockquote</tag><tag>Hugo</tag></tags><content type="html"><![CDATA[  过去 HugoNexT 主题都是通过自定义短语来实现块信息的标注，近期发现 Hugo 从 v0.134.0 版本开始便是可以支持通过hook方式渲染Markdown文档中的Blockquote样式（需要自己实现），实现类似Github的警告风格样式。于是便在 HugoNexT 主题中添加7种不同风格供用户可选择使用，还可以自定义图标与颜色配置。
用户可以找到如下两处配置项的位置，然后根据自己喜欢的风格和颜色进行调整：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # config.yaml 或 hugo.toml postAlerts: info: icon: &#34;circle-info&#34; color: &#34;#4A90E2&#34; note: icon: &#34;bell&#34; color: &#34;#17A2B8&#34; help: icon: &#34;circle-question&#34; color: &#34;#967ADC&#34; error: icon: &#34;circle-xmark&#34; color: &#34;#DC3545&#34; warning: icon: &#34;triangle-exclamation&#34; color: &#34;#F39C12&#34; success: icon: &#34;circle-check&#34; color: &#34;#32CD32&#34; important: icon: &#34;circle-plus&#34; color: &#34;#007BFF&#34; 1 2 3 4 5 6 7 8 9 # i18n/zh-cn.yaml PostAlert: info : &#34;信息&#34; note : &#34;注意&#34; help : &#34;帮助&#34; error : &#34;错误&#34; warning : &#34;警告&#34; success : &#34;成功&#34; important: &#34;重要&#34; 在Maarkdown文档中的写法和实现的具体效果参考如下：
信息提示 1 2 &gt; [!INFO] &gt; `HugoNexT` 主题支持自定义样式设计，你可实现属于自己站点的个性化设计。 信息 HugoNexT 主题支持自定义样式设计，你可实现属于自己站点的个性化设计。
注意信息 1 2 &gt; [!NOTE] &gt; 最新版本的 `HugoNexT` 主题支持Markdown文档的Blockquote渲染，有7种不同风格可选择使用或自定义配置。 注意 最新版本的 HugoNexT 主题支持Markdown文档的Blockquote渲染，有7种不同风格可选择使用或自定义配置。
帮助信息 1 2 &gt; [!HELP] &gt; `HugoNexT` 主题提供了完整的示例使用说明及源代码，上手更为简单易用。 帮助 HugoNexT 主题提供了完整的示例使用说明及源代码，上手更为简单易用。
警告信息 1 2 &gt; [!WARNING] &gt; `HugoNexT` 主题使用了SCSS 预编译，需要下载 Hugo 官方 `hugo-extended` 版本使用。 警告 HugoNexT 主题使用了SCSS 预编译，需要下载 Hugo 官方 hugo-extended 版本使用。
错误信息 1 2 &gt; [!ERROR] &gt; `HugoNexT` 主题只支持在 Hugo v0.132.0 及以上版本中使用。 错误 HugoNexT 主题只支持在 Hugo v0.132.0 及以上版本中使用。
成功信息 1 2 &gt; [!SUCCESS] &gt; 恭喜你已经成功部署 `HugoNexT` 主题，请尽情的开始你的创作吧。 成功 恭喜你已经成功部署 HugoNexT 主题，请尽情的开始你的创作吧。
重要信息 1 2 &gt; [!IMPORTANT] &gt; `HugoNexT` 主题支持使用外部的CDN服务，但此时请确保你的网络是正常且可访问CDN服务。 重要 HugoNexT 主题支持使用外部的CDN服务，但此时请确保你的网络是正常且可访问CDN服务。
自定义标题 1 2 &gt; [!Info]+ 自定义标题说明 &gt; `HugoNexT` 主题提供很开放的灵活配置，用户可按自己的想法改造。 自定义标题说明 HugoNexT 主题提供很开放的灵活配置，用户可按自己的想法改造。
  ]]></content></entry><entry><title>图像浏览工具</title><url>/demo/image-viewer.html</url><categories><category>示例文章</category></categories><tags><tag>图像</tag><tag>相册</tag><tag>浏览</tag></tags><content type="html">  本主题自带图像浏览器功能，支持对文章区域内出现的图片进行浏览，点击图片可以查看大图，点击空白处可以关闭。不需要配置任何参数，只要在文章里面相应的位置添加图片信息即可 。
图像浏览器引用了 fengyuanchen 开发的 viewerjs ，支持显示图像名称，尺寸，旋转，缩放，播放等功能。可点击如下的示例图像查看体验：
动物 风景   </content></entry><entry><title>没有H1-6标题头和评论的文章</title><url>/demo/no-header-title.html</url><categories><category>示例文章</category></categories><tags><tag>toc</tag><tag>标题</tag></tags><content type="html">  刘慈欣2018克拉克奖获奖感言（部分内容节选）。
信息 用于测试在没有H1-6标题头时，文章的目录导航是否会直接关闭，并关闭评论功能。
先生们、女士们，晚上好，
很荣幸获得Clarke Award for Imagination in Service to Society Award。
这个奖项是对想象力的奖励，而想象力是人类所拥有的一种似乎只应属于神的能力，它存在的意义也远超出我们的想象。有历史学家说过，人类之所以能够超越地球上的其它物种建立文明，主要是因为他们能够在自己的大脑中创造出现实中不存在的东西。在未来，当人工智能拥有超过人类的智力时，想象力也许是我们对于它们所拥有的惟一优势。
科幻小说是基于想象力的文学，而最早给我留下深刻印象的是Arthur . Clarke的作品。除了Jules Verne和George Wells外，Clarke的作品是最早进入中国的西方现代科幻小说。在上世纪八十年代初，中国出版了他的《2001:A Space Odyssey》和《Rendezvous With Rama》。当时文革刚刚结束，旧的生活和信仰已经崩塌，新的还没有建立起来，我和其他年轻人一样，心中一片迷茫。这两本书第一次激活了我想象力，思想豁然开阔许多，有小溪流进大海的感觉。读完《2001:A Space Odyssey》的那天深夜，我走出家门仰望星空，那时的中国的天空还没有太多的污染，能够看到银河，在我的眼中，星空与过去完全不一样了，我第一次对宇宙的宏大与神秘产生了敬畏感，这是一种宗教般的感觉。而后来读到的《Rendezvous With Rama》，也让我惊叹如何可以用想象力构造一个栩栩如生的想象世界。正是Clarke带给我的这些感受，让我后来成为一名科幻作家。
现在，三十多年过去了，我渐渐发现，我们这一代在上世纪六十年代出生于中国的人，很可能是人类历史上最幸运的人，因为之前没有任何一代人，像我们这样目睹周围的世界发生了如此巨大的变化，我们现在生活的世界，与我们童年的世界已经完全是两个不同的世界，而这种变化还在加速发生着。中国是一个充满着未来感的国度，中国的未来可能充满着挑战和危机，但从来没有像现在这样具有吸引力，这就给科幻小说提供了肥沃的土壤，使其在中国受到了空前的关注，作为一个在六十年代出生在中国的科幻小说家，则是幸运中的幸运。
我期待有那么一天，像那些曾经描写 …  </content></entry><entry><title>Mermaid支持流程图</title><url>/demo/mermaid-charts.html</url><categories><category>第三方引入</category><category>图序功能</category></categories><tags><tag>流程图</tag><tag>时序图</tag></tags><content type="html"><![CDATA[  本主题已支持 Mermaid 实现以纯文本的方式绘制流程图、序列图、甘特图、状态图、关系图行等等，随着 Mermaid 也在逐步发展，后续还会有各种各样的图被引入进来，更多的类型及使用方式可关注其官方网站： https://mermaid-js.github.io/ 。
使用说明 通过 hugo new 命令创建一篇新的文章 使用短代码书写各种类型的图，自带2个参数： align（对齐） 和 bc（背景色），可参考如下使用示例 流程图 1 2 3 4 5 6 7 {{&lt; mermaid align=&#34;left&#34; &gt;}} graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; {{&lt; /mermaid &gt;}} graph TD; A-->B; A-->C; B-->D; C-->D; 时序图 1 2 3 4 5 6 7 8 9 10 11 12 13 {{&lt; mermaid bc=&#34;#eee&#34; &gt;}} sequenceDiagram participant Alice participant Bob Alice-&gt;&gt;John: Hello John, how are you? loop Healthcheck John-&gt;&gt;John: Fight against hypochondria end Note right of John: Rational thoughts &lt;br/&gt;prevail! John--&gt;&gt;Alice: Great! John-&gt;&gt;Bob: How about you? Bob--&gt;&gt;John: Jolly good! {{&lt; /mermaid &gt;}} sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! 类图 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {{&lt; mermaid &gt;}} classDiagram Class01 &lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --&gt; C2 : Where am i? Class09 --* C3 Class09 --|&gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 &lt;--&gt; C2: Cool label {{&lt; /mermaid &gt;}} classDiagram Class01 <|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label 甘特图 1 2 3 4 5 6 7 8 9 10 11 12 {{&lt; mermaid &gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d {{&lt; /mermaid &gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d 实体关系图 1 2 3 4 5 6 {{&lt; mermaid &gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses {{&lt; /mermaid &gt;}} erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses 用户旅程 1 2 3 4 5 6 7 8 9 10 11 {{&lt; mermaid &gt;}} journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me {{&lt; /mermaid &gt;}} journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me   ]]></content></entry><entry><title>数学公式渲染</title><url>/demo/math-formula.html</url><categories><category>第三方引入</category><category>数学公式</category></categories><tags><tag>数学公式</tag><tag>mathjax</tag><tag>katex</tag></tags><content type="html">  本主题支持 mathjax 和 katex 两种不的方案支持数学公式的渲染，可根据自已的需求进行选择。
接下的示例中，将使用 MathJax 方案来展示渲染效果。
使用 hugo new 命令创建一篇新的文章 可以全局启用数据公式渲染，请在项目配置参数 math: katex 或 math: mathjax 或是将该参数配置到需要显示数学公式的页面头部（减少不必要的资源加载消耗） 注意： 使用 支持的TeX功能 的联机参考资料。
例子 内行公式 二次公式： $ax^2 + bx + c = 0$ （支持用\$....\$格式的行内公式）
二次公式（换行显示公式） $$ax^2 + bx + c = 0$$
更加复杂公式是这样的: $\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$
其它内联公式显示（分数表达 ）：(\frac{1}{2})（支持用\(...\)格式的行内公式效果）
重复的分数 $$ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} \equiv 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}} {1+\frac{e^{-8\pi}} {1+\cdots} } } } $$
总和记号 $$ \left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right) $$
几何级数之和 我把接下来的两个例子分成了几行，这样它在手机上表现得更好。这就是为什么它们包含 \displaystyle。或者可使用类似 \displaylines{x = a + b \\\ y = b + c} 语法进行截断，具体信息可见： mathjax-issues2312 $$ \displaystyle\sum_{i=1}^{k+1}i $$
$$ \displaystyle= \left(\sum_{i=1}^{k}i\right) +(k+1) $$
$$ \displaystyle= \frac{k(k+1)}{2}+k+1 $$
$$ …  </content></entry><entry><title>支持用户自定义设计</title><url>/demo/custom-files.html</url><categories><category>示例文章</category></categories><tags><tag>自定义</tag><tag>个性化</tag><tag>布局</tag></tags><content type="html"><![CDATA[  对于熟悉前端开发的用户来说，可以通过自定义文件配置，实现对站点的样式和布局进行个性化的调整。其中布局方面主要是支持左侧边栏的站点概览部分，以及站点底部2个位置，但样式的重置可以是整个站点的任意位置。
打开配置参数 首先要明确在配置文件的 params 区域中有配置如下参数：
1 2 3 4 customFilePath: sidebar: custom_sidebar.html footer: custom_footer.html style: /css/custom_style.css 注意： sidebar 和 footer 的文件命名不可以与它们的参数名称相同，不然会影响系统默认的布局设计，切记！！！ &#x1f604; 然后在站点的根目录下创建 layouts/partials 2个目录，用于存放自定布局设计文件，另外在站点根目录下创建 static/css 2个目录，用于存放自定义 CSS 样式文件。一切就绪后，就可以参考如下的步骤，完成自己的设计想法。
侧边栏设计 在前面创建 partials 目录中新一个后缀名为 html 的文件，可以在里面书写你所想表达的设计或内容，比如引入一些第三方组件内容。示例如下：
1 2 3 &lt;div class=&#34;mydefined animated&#34; itemprop=&#34;custom&#34;&gt; &lt;span&gt;支持自定义CSS和Sidebar布局啦💄💄💄&lt;/span&gt; &lt;/div&gt; 再把该文件的路径配置到相应的参数中，效果请查看左侧边栏底部的效果。
底部设计 在前面创建 partials 目录中新一个后缀名为 html 的文件，可以在里面书写你所想表达的设计或内容，比如引入一些第三方组件内容。示例如下：
1 2 3 &lt;div class=&#34;custom-footer&#34;&gt; Website source code &lt;a href=&#34;https://github.com/hugo-next/hugo-theme-next/tree/develop/exampleSite/layouts/partials/custom-footer.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; &lt;/div&gt; 再把该文件的路径配置到相应的参数中，效果请查看站点底部的效果。
自定义样式 在前面创建 css 目录中新一个后缀名为 css 的文件，然后可以在里面把站点的样式进行重定义，或是增加一些自己定义的样式设计，在写文章时进行引用，示例如下：
1 2 3 4 5 .custom-head5 { font-size: 1.2em; color: #ed6c24; font-weight: bold; } 再把该文件的路径配置到相应的参数中，效果参考如下：
我是自定义的标题样式效果!!!
  ]]></content></entry><entry><title>自定义短语示例</title><url>/demo/shortcodes.html</url><categories><category>示例文章</category><category>语法</category></categories><tags><tag>短代码</tag><tag>语法</tag></tags><content type="html"><![CDATA[  虽然 Markdown 语法已经非常丰富能够满足我们写文章的绝大部分需求，但是为更好的对文章内容进行更友好的排版，为引设计一套自定义的短语，便于在使用时能够快速引用。
块引用 在引用一些经典名言名句时，可以采用此短语，语法参考如下：
1 2 3 4 {{&lt; quote &gt;}} ### block quote 写下你想表达的话语！ {{&lt; /quote &gt;}} 实际效果：
希望是无所谓有，无所谓无的，这正如地上的路。
其实地上本没有路，走的人多了，也便成了路。
鲁迅
信息块 支持 default，info，success，warning，danger 等五种不同效果的展示，语法参考如下：
1 2 3 4 {{&lt; note [class] [no-icon] &gt;}} 书写表达的信息 支持 Markdown 语法 {{&lt; /note &gt;}} 实际效果：
Default Header without icon Welcome to Hugo NexT! Default Header Welcome to Hugo NexT! Primary Header Welcome to Hugo NexT! Info Header Welcome to Hugo NexT! Success Header Welcome to Hugo NexT! Warning Header Welcome to Hugo NexT! Danger Header Welcome to Hugo NexT! Bilibili 视频 1 2 3 {{&lt; bilibili BV1Sx411T7QQ &gt;}} 或者 {{&lt; bilibili id=BV1Sx411T7QQ &gt;}} 音乐播放器 基于 APlayer 和 MetingJS 库实现见面内嵌的响应式音乐播放器，自动识别的音乐平台URL，包括：netease、 tencent、 kugou、 baidu 和 xiami 平台，也可以支持用户自定义的音乐源。其他相关的参数说明如下：
参数名 默认 说明 id 必选 音乐 ID，即音乐在音乐平台的唯一标识符 server 必选 音乐平台，支持 netease、 tencent、 kugou、 baidu 和 xiami 平台 type 必选 播放类型，目前支持 song 、 playlist、 album、 search 和 artist 类型 auto 可选 音乐的地址，仅支持 server 参数中的平台 theme #448aff 播放器的主题色，默认为 #448aff url 空 自定的音乐源 URL，默认为空 name 空 音乐名称，默认为空 artist 空 音乐作者，默认为空 cover 空 音乐封面 URL，默认为空 fixed false 固定播放器，默认为 false mini false 显示小播放器，默认为 false autoplay false 自动播放，默认为 false loop all 循环播放，支持all、one 和 none，默认为 all order list 播放顺序list 和 random，支持默认为 list volume 0.7 音量，默认为 0.7 mutex true 有多个音乐播放时，是否只开启当前播放器，默认为 true list-folded false 列表折叠，默认为 false list-max-height 340px 列表最大高度，默认为：340px 单曲播放 1 {{&lt; music theme=&#34;#2980b9&#34; server=&#34;tencent&#34; type=&#34;song&#34; id=&#34;002u4ZTb0CXmJA&#34; mini=&#34;true&#34; &gt;}} 列表播放 1 {{&lt; music server=&#34;netease&#34; type=&#34;playlist&#34; id=&#34;1982066521&#34; list-max-height=&#34;140&#34; &gt;}} 自定义音乐源 1 {{&lt; music music url=&#34;/music/sky.mp3&#34; name=&#34;天空之城&#34; artist=&#34;宫崎骏&#34; cover=&#34;/music/gongqijun.jpg&#34; autoplay=&#34;true&#34; &gt;}}   ]]></content></entry><entry><title>关于 Hugo NexT 组织</title><url>/about.html</url><categories/><tags/><content type="html">  Hugo NexT 组织是由众多喜爱 NexT 主题及风格的世界各地友人共同组建而成，为的就是让这个主题继续在 Hugo 引擎中也能得到发扬光大，在此也欢迎你的加入！
我们的愿景 延续 NexT 经典的黑白调搭配，保持简单的易用性及强大的功能。
使用反馈 加入 GitHub Discussions 或 Gitter 在线讨论 &amp;#x1f37b; GitHub Issues 提交错误报告 &amp;#x1f41b; GitHub Feature 表新功能的想法 &amp;#x2728; 信息 同时国内用户也可加入 QQ 群交流： 604710815
  </content></entry><entry><title>文章目录导航</title><url>/demo/table-of-content.html</url><categories><category>示例文章</category></categories><tags><tag>目录</tag><tag>导航</tag><tag>博客</tag></tags><content type="html">  巴顿将军说过：“衡量一个人是否成功，不是看他站到顶峰，而是从顶峰跌落之后的反弹力”，褚时健的人生便是如此，中年发家致富，名利双收，之后又跌落到谷底，等到74岁再创业，10年后带着褚橙归来，东山再起收获亿万财富，他的发展轨迹就是反弹的过程。
早年的故事 起始 2014年的春天，在云南省华宁县和宜良县的交界处，一座名叫矣则的小山村里，一处已经有上百年历史的古旧四合院宅子被拆掉。村委会正带领村民们进行“美丽乡村”的建设，一年以后，旧有村居将再也看不到，代之而起的是钢筋混凝土的新式民居。就像10年、20年前中国大小城市的改造一样，这个群山围绕的小村子也开始陷入“工地模式”。
童年浪花 在江河边长大的孩子几乎都有一个当仁不让的特长：善水。褚时健也不例外，他不仅从小就在南盘江和花鱼塘里扑腾出了上佳的游泳技术，五六岁已经可以一个猛子扎出老远，而且从七八岁就可以在南盘江和河滩上的鱼塘里捉鱼了。
少年故事 褚时健在乡村自由自在生活的十多年，其实正是中国社会风雨飘摇的十多年。特别是1937年卢沟桥事变后，日本人发动全面侵华战争，短短两三年间，中国的大部分国土相继沦陷
激情的青春十年 当上了游击队员 1948年夏天，褚时健回乡，在禄丰车站小学做了一名老师，同时也和褚时仁、褚时杰一起继续保持与共产党组织的联系，做一些传递情报的工作
战火纷飞 因为战斗力相较悬殊，所以游击队只能是靠打一枪换一个地方的办法，专找敌人薄弱的地方攻击，但更多时候，都是在防御和转移阵地。
迎来解放 1949年12月，国民党云南省主席卢汉在昆明宣布起义，云南正式拉开解放的序幕。1950年2月20日，陈赓、宋任穷、周保中率解放军第二野战军第四兵团进入昆明，24日，陈赓宣布云南全境解放。
生活的断层 跌入生活底层 “反右”运动中被打倒的人在“右派”身份确定后，只有一条路可走：下放到农场。农场名副其实，就是干农活儿的地方，必须过和农民一样的生活。
尾声 岁月像一条河 2015年，是褚时健和马静芬结婚60周年，被称为“钻石婚”的纪念年份。这简直是一份人生的奖赏,在中国离婚率愈益升高的当下，60年的婚姻，几乎就像一个前世之梦。一个甲子的相伴相随，褚时健和马静芬共同经历了国家和个人的各种风浪，共同面对过生死。他们两人已经不仅是夫妻，更是一对战友。尽管马静芬偶尔会对褚时健年轻时候的粗心抱怨上两句，但说到最后，她会说一句：“没有我就没 …  </content></entry><entry><title>Hugo 内置的 Chroma 语法高亮</title><url>/demo/syntax-highlighting.html</url><categories><category>示例文章</category><category>语法</category></categories><tags><tag>语法</tag><tag>高亮</tag><tag>Chroma</tag></tags><content type="html"><![CDATA[  Hugo 通过 Chroma 提供非常快速的语法高亮显示，现 Hugo 中使用 Chroma 作为代码块高亮支持，它内置在 Go 语言当中，速度是真的非常、非常快，而且最为重要的是它也兼容之前我们使用的 Pygments 方式。
以下通过 Hugo 内置短代码 highlight 和 Markdown 代码块方式分别验证不同语言的代码块渲染效果并能正确高亮显示，有关优化语法突出显示的更多信息，请参阅 Hugo 文档 。
编程语言 GO 1 2 3 4 5 6 7 8 9 10 11 12 13 14 {{&lt; highlight go &#34;linenos=table,hl_lines=8 15-17,linenostart=199&#34; &gt;}} func GetTitleFunc(style string) func(s string) string { switch strings.ToLower(style) { case &#34;go&#34;: return strings.Title case &#34;chicago&#34;: return transform.NewTitleConverter(transform.ChicagoStyle) default: return transform.NewTitleConverter(transform.APStyle) } } {{&lt; / highlight &gt;}} 199 200 201 202 203 204 205 206 207 208 func GetTitleFunc(style string) func(s string) string { switch strings.ToLower(style) { case &#34;go&#34;: return strings.Title case &#34;chicago&#34;: return transform.NewTitleConverter(transform.ChicagoStyle) default: return transform.NewTitleConverter(transform.APStyle) } } Java 1 2 3 4 5 6 7 8 9 10 11 12 import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame frame.setTitle(&#34;Hi!&#34;); //Setting title frame frame.add(new JLabel(&#34;Hello, world!&#34;));//Adding text to frame frame.pack(); //Setting size to smallest frame.setLocationRelativeTo(null); //Centering frame frame.setVisible(true); //Showing frame } } Python 1 print &#34;Hello, world!&#34; Git 对比 1 2 3 4 5 6 7 8 9 10 *** /path/to/original &#39;&#39;timestamp&#39;&#39; --- /path/to/new &#39;&#39;timestamp&#39;&#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line *** /path/to/original &#39;&#39;timestamp&#39;&#39; --- /path/to/new &#39;&#39;timestamp&#39;&#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line 文件 Make 文件 CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. Markdown 文档 1 2 3 **bold** *italics* [link](www.example.com) 数据内容 JSON 数据 1 2 3 {&#34;employees&#34;:[ {&#34;firstName&#34;:&#34;John&#34;, &#34;lastName&#34;:&#34;Doe&#34;}, ]} XML 内容 1 2 3 4 5 &lt;employees&gt; &lt;employee&gt; &lt;firstName&gt;John&lt;/firstName&gt; &lt;lastName&gt;Doe&lt;/lastName&gt; &lt;/employee&gt; &lt;/employees&gt; SQL 查询 1 2 3 4 SELECT column_name,column_name FROM Table WHERE column_name = &#34;condition&#34; 自动猜测代码高亮显示 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 .highlight { //Other codes ...... &gt; .chroma { position: relative; //Fix code block overflow issue pre { overflow-wrap: break-word; white-space: pre-wrap; line-break: anywhere; word-break: break-all; overflow-x: auto; } } } 除以上列举的代码高亮显示外，还支持诸如：C 语言、C++、HTML、CSS、Shell脚本等各主流的代码语言高亮显示，可自行测试效果。
  ]]></content></entry><entry><title>支持 Emoji 表情</title><url>/demo/emoji-support.html</url><categories><category>示例文章</category><category>语法</category></categories><tags><tag>表情</tag><tag>Emoji</tag></tags><content type="html"><![CDATA[  Emoji 可以通过多种方式在 Hugo 项目中启用。
emojify 方法可以直接在模板中调用, 或者使用 行内 Shortcodes .
要全局使用 emoji, 需要在你的 网站配置 中设置 enableEmoji 为 true， 然后你就可以直接在文章中输入 emoji 的代码。
它们以冒号开头和结尾，并且包含 emoji 的 简短代码：
1 2 3 去露营啦! {:}tent: 很快就回来. 真开心! {:}joy: 呈现的输出效果如下:
去露营啦! &#x26fa; 很快就回来。 真开心! &#x1f602;
以下符号清单是 emoji 代码的非常有用的参考。
表情与情感 笑脸表情 图标 代码 图标 代码 &#x1f600; grinning &#x1f603; smiley &#x1f604; smile &#x1f601; grin &#x1f606; laughing satisfied &#x1f605; sweat_smile &#x1f923; rofl &#x1f602; joy &#x1f642; slightly_smiling_face &#x1f643; upside_down_face &#x1f609; wink &#x1f60a; blush &#x1f607; innocent 爱意表情 图标 代码 图标 代码 &#x1f60d; heart_eyes &#x1f618; kissing_heart &#x1f617; kissing &#x263a;&#xfe0f; relaxed &#x1f61a; kissing_closed_eyes &#x1f619; kissing_smiling_eyes 吐舌头表情 图标 代码 图标 代码 &#x1f60b; yum &#x1f61b; stuck_out_tongue &#x1f61c; stuck_out_tongue_winking_eye &#x1f61d; stuck_out_tongue_closed_eyes &#x1f911; money_mouth_face &#x1f911; 国家和地区旗帜 图标 代码 图标 代码 &#x1f1e6;&#x1f1e9; andorra &#x1f1e6;&#x1f1ea; united_arab_emirates &#x1f1e6;&#x1f1eb; afghanistan &#x1f1e6;&#x1f1ec; antigua_barbuda &#x1f1e6;&#x1f1ee; anguilla &#x1f1e6;&#x1f1f1; albania &#x1f1e6;&#x1f1f2; armenia &#x1f1e6;&#x1f1f4; angola &#x1f1e6;&#x1f1f6; antarctica &#x1f1e6;&#x1f1f7; argentina &#x1f1e6;&#x1f1f8; american_samoa &#x1f1e6;&#x1f1f9; austria &#x1f1e6;&#x1f1fa; australia &#x1f1e6;&#x1f1fc; aruba &#x1f1e6;&#x1f1fd; aland_islands &#x1f1e6;&#x1f1ff; azerbaijan &#x1f1e7;&#x1f1e6; bosnia_herzegovina &#x1f1e7;&#x1f1e7; barbados &#x1f1e7;&#x1f1e9; bangladesh &#x1f1e7;&#x1f1ea; belgium &#x1f1e7;&#x1f1eb; burkina_faso &#x1f1e7;&#x1f1ec; bulgaria &#x1f1e7;&#x1f1ed; bahrain &#x1f1e7;&#x1f1ee; burundi &#x1f1e7;&#x1f1ef; benin &#x1f1e7;&#x1f1f1; st_barthelemy &#x1f1e7;&#x1f1f2; bermuda &#x1f1e7;&#x1f1f3; brunei &#x1f1e7;&#x1f1f4; bolivia &#x1f1e7;&#x1f1f6; caribbean_netherlands &#x1f1e7;&#x1f1f7; brazil &#x1f1e7;&#x1f1f8; bahamas &#x1f1e7;&#x1f1f9; bhutan &#x1f1e7;&#x1f1fc; botswana &#x1f1e7;&#x1f1fe; belarus &#x1f1e7;&#x1f1ff; belize &#x1f1e8;&#x1f1e6; canada &#x1f1e8;&#x1f1e8; cocos_islands &#x1f1e8;&#x1f1e9; congo_kinshasa &#x1f1e8;&#x1f1eb; central_african_republic &#x1f1e8;&#x1f1ec; congo_brazzaville &#x1f1e8;&#x1f1ed; switzerland &#x1f1e8;&#x1f1ee; cote_divoire &#x1f1e8;&#x1f1f0; cook_islands &#x1f1e8;&#x1f1f1; chile &#x1f1e8;&#x1f1f2; cameroon &#x1f1e8;&#x1f1f3; cn &#x1f1e8;&#x1f1f4; colombia &#x1f1e8;&#x1f1f7; costa_rica &#x1f1e8;&#x1f1fa; cuba &#x1f1e8;&#x1f1fb; cape_verde &#x1f1e8;&#x1f1fc; curacao &#x1f1e8;&#x1f1fd; christmas_island &#x1f1e8;&#x1f1fe; cyprus &#x1f1e8;&#x1f1ff; czech_republic &#x1f1e9;&#x1f1ea; de &#x1f1e9;&#x1f1ef; djibouti &#x1f1e9;&#x1f1f0; denmark &#x1f1e9;&#x1f1f2; dominica &#x1f1e9;&#x1f1f4; dominican_republic &#x1f1e9;&#x1f1ff; algeria &#x1f1ea;&#x1f1e8; ecuador &#x1f1ea;&#x1f1ea; estonia &#x1f1ea;&#x1f1ec; egypt &#x1f1ea;&#x1f1ed; western_sahara &#x1f1ea;&#x1f1f7; eritrea &#x1f1ea;&#x1f1f8; es &#x1f1ea;&#x1f1f9; ethiopia &#x1f1ea;&#x1f1fa; eu european_union &#x1f1eb;&#x1f1ee; finland &#x1f1eb;&#x1f1ef; fiji &#x1f1eb;&#x1f1f0; falkland_islands &#x1f1eb;&#x1f1f2; micronesia &#x1f1eb;&#x1f1f4; faroe_islands &#x1f1eb;&#x1f1f7; fr &#x1f1ec;&#x1f1e6; gabon &#x1f1ec;&#x1f1e7; gb uk &#x1f1ec;&#x1f1e9; grenada &#x1f1ec;&#x1f1ea; georgia &#x1f1ec;&#x1f1eb; french_guiana &#x1f1ec;&#x1f1ec; guernsey &#x1f1ec;&#x1f1ed; ghana &#x1f1ec;&#x1f1ee; gibraltar &#x1f1ec;&#x1f1f1; greenland &#x1f1ec;&#x1f1f2; gambia &#x1f1ec;&#x1f1f3; guinea &#x1f1ec;&#x1f1f5; guadeloupe &#x1f1ec;&#x1f1f6; equatorial_guinea &#x1f1ec;&#x1f1f7; greece &#x1f1ec;&#x1f1f8; south_georgia_south_sandwich_islands &#x1f1ec;&#x1f1f9; guatemala &#x1f1ec;&#x1f1fa; guam &#x1f1ec;&#x1f1fc; guinea_bissau &#x1f1ec;&#x1f1fe; guyana &#x1f1ed;&#x1f1f0; hong_kong &#x1f1ed;&#x1f1f3; honduras &#x1f1ed;&#x1f1f7; croatia &#x1f1ed;&#x1f1f9; haiti &#x1f1ed;&#x1f1fa; hungary &#x1f1ee;&#x1f1e8; canary_islands &#x1f1ee;&#x1f1e9; indonesia &#x1f1ee;&#x1f1ea; ireland &#x1f1ee;&#x1f1f1; israel &#x1f1ee;&#x1f1f2; isle_of_man &#x1f1ee;&#x1f1f3; india &#x1f1ee;&#x1f1f4; british_indian_ocean_territory &#x1f1ee;&#x1f1f6; iraq &#x1f1ee;&#x1f1f7; iran &#x1f1ee;&#x1f1f8; iceland &#x1f1ee;&#x1f1f9; it &#x1f1ef;&#x1f1ea; jersey &#x1f1ef;&#x1f1f2; jamaica &#x1f1ef;&#x1f1f4; jordan &#x1f1ef;&#x1f1f5; jp &#x1f1f0;&#x1f1ea; kenya &#x1f1f0;&#x1f1ec; kyrgyzstan &#x1f1f0;&#x1f1ed; cambodia &#x1f1f0;&#x1f1ee; kiribati &#x1f1f0;&#x1f1f2; comoros &#x1f1f0;&#x1f1f3; st_kitts_nevis &#x1f1f0;&#x1f1f5; north_korea &#x1f1f0;&#x1f1f7; kr &#x1f1f0;&#x1f1fc; kuwait &#x1f1f0;&#x1f1fe; cayman_islands &#x1f1f0;&#x1f1ff; kazakhstan &#x1f1f1;&#x1f1e6; laos &#x1f1f1;&#x1f1e7; lebanon &#x1f1f1;&#x1f1e8; st_lucia &#x1f1f1;&#x1f1ee; liechtenstein &#x1f1f1;&#x1f1f0; sri_lanka &#x1f1f1;&#x1f1f7; liberia &#x1f1f1;&#x1f1f8; lesotho &#x1f1f1;&#x1f1f9; lithuania &#x1f1f1;&#x1f1fa; luxembourg &#x1f1f1;&#x1f1fb; latvia &#x1f1f1;&#x1f1fe; libya &#x1f1f2;&#x1f1e6; morocco &#x1f1f2;&#x1f1e8; monaco &#x1f1f2;&#x1f1e9; moldova &#x1f1f2;&#x1f1ea; montenegro &#x1f1f2;&#x1f1ec; madagascar &#x1f1f2;&#x1f1ed; marshall_islands &#x1f1f2;&#x1f1f0; macedonia &#x1f1f2;&#x1f1f1; mali &#x1f1f2;&#x1f1f2; myanmar &#x1f1f2;&#x1f1f3; mongolia &#x1f1f2;&#x1f1f4; macau &#x1f1f2;&#x1f1f5; northern_mariana_islands &#x1f1f2;&#x1f1f6; martinique &#x1f1f2;&#x1f1f7; mauritania &#x1f1f2;&#x1f1f8; montserrat &#x1f1f2;&#x1f1f9; malta &#x1f1f2;&#x1f1fa; mauritius &#x1f1f2;&#x1f1fb; maldives &#x1f1f2;&#x1f1fc; malawi &#x1f1f2;&#x1f1fd; mexico &#x1f1f2;&#x1f1fe; malaysia &#x1f1f2;&#x1f1ff; mozambique &#x1f1f3;&#x1f1e6; namibia &#x1f1f3;&#x1f1e8; new_caledonia &#x1f1f3;&#x1f1ea; niger &#x1f1f3;&#x1f1eb; norfolk_island &#x1f1f3;&#x1f1ec; nigeria &#x1f1f3;&#x1f1ee; nicaragua &#x1f1f3;&#x1f1f1; netherlands &#x1f1f3;&#x1f1f4; norway &#x1f1f3;&#x1f1f5; nepal &#x1f1f3;&#x1f1f7; nauru &#x1f1f3;&#x1f1fa; niue &#x1f1f3;&#x1f1ff; new_zealand &#x1f1f4;&#x1f1f2; oman &#x1f1f5;&#x1f1e6; panama &#x1f1f5;&#x1f1ea; peru &#x1f1f5;&#x1f1eb; french_polynesia &#x1f1f5;&#x1f1ec; papua_new_guinea &#x1f1f5;&#x1f1ed; philippines &#x1f1f5;&#x1f1f0; pakistan &#x1f1f5;&#x1f1f1; poland &#x1f1f5;&#x1f1f2; st_pierre_miquelon &#x1f1f5;&#x1f1f3; pitcairn_islands &#x1f1f5;&#x1f1f7; puerto_rico &#x1f1f5;&#x1f1f8; palestinian_territories &#x1f1f5;&#x1f1f9; portugal &#x1f1f5;&#x1f1fc; palau &#x1f1f5;&#x1f1fe; paraguay &#x1f1f6;&#x1f1e6; qatar &#x1f1f7;&#x1f1ea; reunion &#x1f1f7;&#x1f1f4; romania &#x1f1f7;&#x1f1f8; serbia &#x1f1f7;&#x1f1fa; ru &#x1f1f7;&#x1f1fc; rwanda &#x1f1f8;&#x1f1e6; saudi_arabia &#x1f1f8;&#x1f1e7; solomon_islands &#x1f1f8;&#x1f1e8; seychelles &#x1f1f8;&#x1f1e9; sudan &#x1f1f8;&#x1f1ea; sweden &#x1f1f8;&#x1f1ec; singapore &#x1f1f8;&#x1f1ed; st_helena &#x1f1f8;&#x1f1ee; slovenia &#x1f1f8;&#x1f1f0; slovakia &#x1f1f8;&#x1f1f1; sierra_leone &#x1f1f8;&#x1f1f2; san_marino &#x1f1f8;&#x1f1f3; senegal &#x1f1f8;&#x1f1f4; somalia &#x1f1f8;&#x1f1f7; suriname &#x1f1f8;&#x1f1f8; south_sudan &#x1f1f8;&#x1f1f9; sao_tome_principe &#x1f1f8;&#x1f1fb; el_salvador &#x1f1f8;&#x1f1fd; sint_maarten &#x1f1f8;&#x1f1fe; syria &#x1f1f8;&#x1f1ff; swaziland &#x1f1f9;&#x1f1e8; turks_caicos_islands &#x1f1f9;&#x1f1e9; chad &#x1f1f9;&#x1f1eb; french_southern_territories &#x1f1f9;&#x1f1ec; togo &#x1f1f9;&#x1f1ed; thailand &#x1f1f9;&#x1f1ef; tajikistan &#x1f1f9;&#x1f1f0; tokelau &#x1f1f9;&#x1f1f1; timor_leste &#x1f1f9;&#x1f1f2; turkmenistan &#x1f1f9;&#x1f1f3; tunisia &#x1f1f9;&#x1f1f4; tonga &#x1f1f9;&#x1f1f7; tr &#x1f1f9;&#x1f1f9; trinidad_tobago &#x1f1f9;&#x1f1fb; tuvalu &#x1f1f9;&#x1f1fc; taiwan &#x1f1f9;&#x1f1ff; tanzania &#x1f1fa;&#x1f1e6; ukraine &#x1f1fa;&#x1f1ec; uganda &#x1f1fa;&#x1f1f8; us &#x1f1fa;&#x1f1fe; uruguay &#x1f1fa;&#x1f1ff; uzbekistan &#x1f1fb;&#x1f1e6; vatican_city &#x1f1fb;&#x1f1e8; st_vincent_grenadines &#x1f1fb;&#x1f1ea; venezuela &#x1f1fb;&#x1f1ec; british_virgin_islands &#x1f1fb;&#x1f1ee; us_virgin_islands &#x1f1fb;&#x1f1f3; vietnam &#x1f1fb;&#x1f1fa; vanuatu &#x1f1fc;&#x1f1eb; wallis_futuna &#x1f1fc;&#x1f1f8; samoa &#x1f1fd;&#x1f1f0; kosovo &#x1f1fe;&#x1f1ea; yemen &#x1f1fe;&#x1f1f9; mayotte &#x1f1ff;&#x1f1e6; south_africa &#x1f1ff;&#x1f1f2; zambia &#x1f1ff;&#x1f1fc; zimbabwe   ]]></content></entry><entry><title>Markdown 语法支持</title><url>/demo/markdown-syntax.html</url><categories><category>示例文章</category><category>Markdown语法</category></categories><tags><tag>Markdown</tag><tag>语法</tag></tags><content type="html"><![CDATA[  仅以此篇文章来测试下在 NexT 主题中在通过 Hugo 引擎来建站时，是否支持 Markdown 文件内容中所写的各种语法，并展示下实际的效果。
标题样式 让我们从所有可能的标题开始，在 HTML 中 &lt;h1&gt;-&lt;h6&gt;元素分别表示六个不同级别的标题样式，其中 &lt;h1&gt; 为最大标题，&lt;h6&gt;为最小标题，效果如下：
标题 1 标题 2 标题 3 标题 4 标题 5 标题 6 段落格式 根据 W3C 定义的 HTML5 规范 ，HTML 文档由元素和文本组成。每个元素的组成都由一个 开始标记 表示，例如： &lt;body&gt; ，和 结束标记 表示，例如： &lt;/body&gt; 。（某些开始标记和结束标记在某些情况下可以省略，并由其他标记暗示。） 元素可以具有属性，这些属性控制元素的工作方式。例如：超链接是使用 a 元素及其 href 属性形成的。
Markdown 语法 1 ![图像说明](图像地址) HTML IMG 标签 1 &lt;img src=&#34;图像地址&#34; width=&#34;宽度&#34; height=&#34;高度&#34; /&gt; SVG 格式 1 &lt;svg&gt;xxxxxx&lt;/svg&gt; 列表类型 有序列表 第一个元素 第二个元素 第三个元素 无序列表 列表元素 另一个元素 和其它元素 嵌套列表 借助 HTML 的 ul 元素来实现。
第一项 第二项 第二项第一个子项目 第二项第二个子项目 第二项第二分项第一分项 第二项第二分项第二分项 第二项第二分项第三分项 第二项第三个子项目 第二项第三分项第一分项 第二项第三分项第二分项 第二项第三分项第三分项 第三项 自定义列表 通过 HTML 的 dl 元素还支持自定义列表（表格列表）。
Hugo 目录结构 assets hugo.toml content data theme static Hugo 模板 基础模板 列表模板 单页模板 块引用 blockquote 元素表示从另一个源引用的内容，可以选择引用必须在 footer 或 cite 元素中，也可以选择使用注释和缩写等行内更改。
引用文本 这一行也是同样的引用 同样你也在 blockquote 中使用 Markdown 语法书写
带有引文的 Blockquote 元素效果。
我的目标不是赚大钱,是为了制造好的电脑。当我意识到我可以永远当工程师时，我才创办了这家公司。
— 史蒂夫·沃兹尼亚克 根据 Mozilla 的网站记录，Firefox 1.0 于 2004 年发布，并取得了巨大成功。
表格 表格并不算是 Markdown 的核心要素，但 Hugo 同样支持它。
ID 创建者 模型 年份 1 Honda Accord 2009 2 Toyota Camry 2012 3 Hyundai Elantra 2010 可以使用 : （英文格式冒号）来对表格内容进行对齐。
表格 可以是 很酷 左对齐 居中 右对齐 左对齐 居中 右对齐 左对齐 居中 右对齐 同样也可以在表格中使用 Markdown 语法。
表格 中 使用 Markdown 语法 斜体 粗体 中划线 代码块 Code 使用 Markdown 语法书写代码块：
1 2 3 4 5 6 7 8 9 10 &lt;!DOCTYPE html&gt; &lt;html lang=&#34;en&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;UTF-8&#34;&gt; &lt;title&gt;Example HTML5 Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Test&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 使用Hugo自带的 highlight 短语标注代码块：
44 45 46 47 48 49 50 51 52 53 &lt;!DOCTYPE html&gt; &lt;html lang=&#34;en&#34;&gt; &lt;head&gt; &lt;meta charset=&#34;UTF-8&#34;&gt; &lt;title&gt;Example HTML5 Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Test&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 其它元素： abbr、sub、sup、kbd等等 GIF 是位图图像格式。
H2O
C6H12O6
Xn + Yn = Zn
按X获胜。或按CTRL+ALT+F显示 FPS 计数器。
比特作为信息论中的信息单位，也被称为 shannon ，以信息论领域的创始人 Claude shannon 的名字命名。
参考：
来自 Mainroad 主题的 Basic Elements 内容   ]]></content></entry></search>